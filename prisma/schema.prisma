// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
   provider  = "postgresql"
   url = env("DATABASE_URL")
// uncomment next line if you use Prisma <5.10
// directUrl = env("DATABASE_URL_UNPOOLED")
}

// datasource db {
  // provider  = "mysql"
  // url  	    = env("DATABASE_URL")
// }

// Modelos para Auth.js
// https://authjs.dev/reference/adapter/prisma#setup

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String?     @default("ADMIN") // o "ADMIN"  
  accounts      Account[]
}

model Paciente {
  id             Int       @id @default(autoincrement())
  nombre         String
  telefono       String    
  fechaNacimiento DateTime  
  dni            String    
  // Define la relación con el médico
  medico         Medico    @relation(fields: [medicoId], references: [id])
  medicoId       Int

  @@map("pacientes")
}

model Medico {
  id           Int        @id @default(autoincrement())
  nombre       String
  edad         Int        
  telefono     String     
  especialidad String
  // Define la relación con los pacientes
  pacientes    Paciente[]

  @@map("medicos")
}